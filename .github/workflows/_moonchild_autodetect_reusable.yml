name: Moonchild · Call Autodetect

on:
  workflow_dispatch:
  push:
    paths:
      - 'circuitum99/main/04_registry-meta/registry.md'
      - 'circuitum99/main/registry/**'

permissions:
  contents: read

concurrency:
  group: moonchild-call-${{ github.ref }}
  cancel-in-progress: true

jobs:
  autodetect:
    uses: ./.github/workflows/_moonchild_autodetect_reusable.yml

  validate:
    needs: autodetect
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (no LFS)
        uses: actions/checkout@v4
        with: { fetch-depth: 1, lfs: false }

      - name: Resolve & assert canonical files exist
        id: resolve
        shell: bash
        run: |
          set -euo pipefail

          CANON_REGISTRY="circuitum99/main/04_registry-meta/registry.md"
          CANON_PROFILE="circuitum99/main/registry/characters/moonchild/moonchild_profile.md"
          CANON_PILLAR="circuitum99/main/registry/pillars/pillar_21_moonchild.md"
          CANON_SPINE="circuitum99/main/registry/spine/living_spine_33.md"
          CANON_REALMS="circuitum99/main/registry/realms/index.md"
          CANON_CHARS="circuitum99/main/registry/characters/index.md"

          echo "REGISTRY_CANON=$CANON_REGISTRY" >> $GITHUB_OUTPUT
          echo "PROFILE_CANON=$CANON_PROFILE"   >> $GITHUB_OUTPUT
          echo "PILLAR_CANON=$CANON_PILLAR"     >> $GITHUB_OUTPUT
          echo "SPINE_CANON=$CANON_SPINE"       >> $GITHUB_OUTPUT
          echo "REALMS_CANON=$CANON_REALMS"     >> $GITHUB_OUTPUT
          echo "CHARS_CANON=$CANON_CHARS"       >> $GITHUB_OUTPUT

          echo "## Moonchild Call -- Expected Files" >> $GITHUB_STEP_SUMMARY
          missing=0
          for p in "$CANON_REGISTRY" "$CANON_PROFILE" "$CANON_PILLAR" "$CANON_SPINE" "$CANON_REALMS" "$CANON_CHARS"; do
            if [ -f "$p" ]; then
              echo "- ✅ $p" >> $GITHUB_STEP_SUMMARY
            else
              echo "- ❌ MISSING: $p" >> $GITHUB_STEP_SUMMARY
              missing=1
            fi
          done
          [ $missing -eq 0 ] || { echo "::error::One or more required files are missing. See summary above."; exit 1; }

      - name: Link check (from registry)
        shell: bash
        run: |
          set -euo pipefail
          REG="circuitum99/main/04_registry-meta/registry.md"
          REQUIRED_LINKS=(
            "../registry/pillars/pillar_21_moonchild.md"
            "../registry/spine/living_spine_33.md"
            "../registry/realms/index.md"
            "../registry/characters/index.md"
            "../registry/characters/moonchild/moonchild_profile.md"
          )

          echo "## Link Check (relative to $REG)" >> $GITHUB_STEP_SUMMARY
          base_dir="$(dirname "$REG")"
          for rel in "${REQUIRED_LINKS[@]}"; do
            abs="$(python - <<'PY'
import os,sys
print(os.path.normpath(os.path.join(sys.argv[1], sys.argv[2])))
PY
"$base_dir" "$rel")"
            if [ -f "$abs" ]; then
              echo "- ✅ $rel → $abs" >> $GITHUB_STEP_SUMMARY
            else
              echo "- ❌ $rel → $abs (missing)" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Success summary
        run: echo "Moonchild Call Autodetect completed." >> $GITHUB_STEP_SUMMARY